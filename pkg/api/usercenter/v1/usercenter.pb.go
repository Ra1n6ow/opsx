// Copyright 2025 JingFeng Du <jeffduuu@gmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/Ra1n6ow/opsx.

// Core API 定义，包含健康检查、用户管理和文章管理的 RPC 接口

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.4
// source: usercenter/v1/usercenter.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_usercenter_v1_usercenter_proto protoreflect.FileDescriptor

const file_usercenter_v1_usercenter_proto_rawDesc = "" +
	"\n" +
	"\x1eusercenter/v1/usercenter.proto\x12\x02v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1busercenter/v1/healthz.proto\x1a.protoc-gen-openapiv2/options/annotations.proto2\x84\x01\n" +
	"\n" +
	"Usercenter\x12v\n" +
	"\aHealthz\x12\x16.google.protobuf.Empty\x1a\x13.v1.HealthzResponse\">\x92A+\n" +
	"\f服务治理\x12\x12服务健康检查*\aHealthz\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/healthzB\xfb\x01\x92A\xc5\x01\x12\x9b\x01\n" +
	"\x13opsx-usercenter API\";\n" +
	"\x04opsx\x12\x1fhttps://github.com/Ra1n6ow/opsx\x1a\x12jeffduuu@gmail.com*B\n" +
	"\vMIT License\x123https://github.com/Ra1n6ow/opsx/blob/master/LICENSE2\x031.0*\x01\x022\x10application/json:\x10application/jsonZ0github.com/ra1n6ow/opsx/pkg/api/usercenter/v1;v1b\x06proto3"

var file_usercenter_v1_usercenter_proto_goTypes = []any{
	(*emptypb.Empty)(nil),   // 0: google.protobuf.Empty
	(*HealthzResponse)(nil), // 1: v1.HealthzResponse
}
var file_usercenter_v1_usercenter_proto_depIdxs = []int32{
	0, // 0: v1.Usercenter.Healthz:input_type -> google.protobuf.Empty
	1, // 1: v1.Usercenter.Healthz:output_type -> v1.HealthzResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_usercenter_v1_usercenter_proto_init() }
func file_usercenter_v1_usercenter_proto_init() {
	if File_usercenter_v1_usercenter_proto != nil {
		return
	}
	file_usercenter_v1_healthz_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_usercenter_v1_usercenter_proto_rawDesc), len(file_usercenter_v1_usercenter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_usercenter_v1_usercenter_proto_goTypes,
		DependencyIndexes: file_usercenter_v1_usercenter_proto_depIdxs,
	}.Build()
	File_usercenter_v1_usercenter_proto = out.File
	file_usercenter_v1_usercenter_proto_goTypes = nil
	file_usercenter_v1_usercenter_proto_depIdxs = nil
}
